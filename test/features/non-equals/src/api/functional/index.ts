/**
 * @packageDocumentation
 * @module api.functional
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import { Fetcher, Primitive } from "@nestia/fetcher";
import type { IConnection } from "@nestia/fetcher";

import type { IRequestDto } from "./../structures/IRequestDto";

export * as health from "./health";
export * as performance from "./performance";

/**
 * @controller RequestController.request()
 * @path POST /request
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export function request
    (
        connection: IConnection,
        input: Primitive<request.Input>
    ): Promise<request.Output>
{
    return Fetcher.fetch
    (
        connection,
        request.ENCRYPTED,
        request.METHOD,
        request.path(),
        input
    );
}
export namespace request
{
    export type Input = Primitive<IRequestDto>;
    export type Output = Primitive<IRequestDto>;

    export const METHOD = "POST" as const;
    export const PATH: string = "/request";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string
    {
        return `/request`;
    }
}