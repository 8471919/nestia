/**
 * @packageDocumentation
 * @module api.functional.swagger
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, Primitive } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";
import type { Format } from "typia/lib/tags/Format";

/**
 * @controller SwaggerController.customize
 * @path GET /swagger/:key/customize
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function customize(
  connection: IConnection,
  key: number,
): Promise<customize.Output> {
  return PlainFetcher.fetch(connection, {
    ...customize.METADATA,
    path: customize.path(key),
  });
}
export namespace customize {
  export type Output = Primitive<string>;

  export const METADATA = {
    method: "GET",
    path: "/swagger/:key/customize",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (key: number) =>
    `/swagger/${encodeURIComponent(key ?? "null")}/customize`;
}

/**
 * @controller SwaggerController.normal
 * @path GET /swagger/:id/normal
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function normal(
  connection: IConnection,
  id: string & Format<"uuid">,
): Promise<normal.Output> {
  return PlainFetcher.fetch(connection, {
    ...normal.METADATA,
    path: normal.path(id),
  });
}
export namespace normal {
  export type Output = Primitive<string>;

  export const METADATA = {
    method: "GET",
    path: "/swagger/:id/normal",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (id: string & Format<"uuid">) =>
    `/swagger/${encodeURIComponent(id ?? "null")}/normal`;
}
