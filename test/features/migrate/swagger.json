{
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "https://github.com/samchon/nestia",
      "description": "insert your server url"
    }
  ],
  "info": {
    "version": "3.11.0-dev.20240813-11",
    "title": "@samchon/nestia-test",
    "description": "Test program of Nestia",
    "license": {
      "name": "MIT"
    }
  },
  "paths": {
    "/bbs/articles": {
      "patch": {
        "tags": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIBbsArticle.ISummary"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Store an article",
        "description": "Store an article.",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "description": "Content to store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticle.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Newly archived article",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBbsArticle"
                }
              }
            }
          }
        }
      }
    },
    "/bbs/articles/{id}": {
      "get": {
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBbsArticle"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartialIBbsArticle.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/multipart": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IMultipart"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IMultipart.IContent"
                }
              }
            }
          }
        }
      }
    },
    "/query/typed": {
      "get": {
        "tags": [],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "enforce",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          },
          {
            "name": "values",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 1
            },
            "required": true
          },
          {
            "name": "atomic",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IQuery"
                }
              }
            }
          }
        }
      }
    },
    "/query/nest": {
      "get": {
        "tags": [],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$"
            },
            "required": false
          },
          {
            "name": "enforce",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "const": "false"
                },
                {
                  "const": "true"
                }
              ]
            },
            "required": true
          },
          {
            "name": "atomic",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "values",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IQuery"
                }
              }
            }
          }
        }
      }
    },
    "/query/individual": {
      "get": {
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/query/composite": {
      "get": {
        "tags": [],
        "parameters": [
          {
            "name": "atomic",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "values",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 1
            },
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "enforce",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IQuery"
                }
              }
            }
          }
        }
      }
    },
    "/query/body": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IQuery"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/IQuery"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "IPageIBbsArticle.ISummary": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticle.ISummary"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination"
          }
        },
        "required": [
          "data",
          "pagination"
        ]
      },
      "IBbsArticle.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "created_at"
        ]
      },
      "IPage.IPagination": {
        "type": "object",
        "properties": {
          "current": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "records": {
            "type": "integer"
          },
          "pages": {
            "type": "integer"
          }
        },
        "required": [
          "current",
          "limit",
          "records",
          "pages"
        ],
        "description": "Page information."
      },
      "IPage.IRequest": {
        "type": "object",
        "properties": {
          "page": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "limit": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          }
        },
        "description": "Page request data"
      },
      "IBbsArticle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50
          },
          "body": {
            "type": "string"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile"
            }
          }
        },
        "required": [
          "id",
          "created_at",
          "title",
          "body",
          "files"
        ]
      },
      "IAttachmentFile": {
        "type": "object",
        "properties": {
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 255
              }
            ]
          },
          "extension": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "minLength": 1,
                "maxLength": 8
              }
            ]
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "name",
          "extension",
          "url"
        ]
      },
      "IBbsArticle.ICreate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50
          },
          "body": {
            "type": "string"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile"
            }
          }
        },
        "required": [
          "title",
          "body",
          "files"
        ]
      },
      "PartialIBbsArticle.ICreate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50
          },
          "body": {
            "type": "string"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile"
            }
          }
        },
        "description": "Make all properties in T optional"
      },
      "IMultipart.IContent": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "title",
          "description",
          "flags"
        ]
      },
      "IMultipart": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "blob": {
            "type": "string",
            "format": "binary"
          },
          "blobs": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "file": {
            "type": "string",
            "format": "binary"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "title",
          "blob",
          "blobs",
          "description",
          "file",
          "flags",
          "files"
        ]
      },
      "IQuery": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number"
          },
          "enforce": {
            "type": "boolean"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "atomic": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "enforce",
          "values",
          "atomic"
        ]
      },
      "INestQuery": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "string",
            "pattern": "^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$"
          },
          "enforce": {
            "oneOf": [
              {
                "const": "false"
              },
              {
                "const": "true"
              }
            ]
          },
          "atomic": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          }
        },
        "required": [
          "enforce",
          "atomic",
          "values"
        ]
      },
      "OmitIQueryatomic": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "limit": {
            "type": "number"
          },
          "enforce": {
            "type": "boolean"
          }
        },
        "required": [
          "values",
          "enforce"
        ],
        "description": "Construct a type with the properties of T except for those in type K."
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "apiKey"
      }
    }
  },
  "tags": [],
  "x-samchon-emended": true
}