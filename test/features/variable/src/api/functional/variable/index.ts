/**
 * @packageDocumentation
 * @module api.functional.variable
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import { Fetcher } from "@nestia/fetcher";
import type { IConnection } from "@nestia/fetcher";

export * as $delete from "./$delete";
export * as $1234 from "./$1234";

/**
 * @controller VariableController.try()
 * @path GET /variable/try
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function $try(
    connection: IConnection,
): Promise<void> {
    return Fetcher.fetch(
        connection,
        $try.ENCRYPTED,
        $try.METHOD,
        $try.path(),
    );
}
export namespace $try {

    export const METHOD = "GET" as const;
    export const PATH: string = "/variable/try";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export const path = (): string => {
        return `/variable/try`;
    }
}

/**
 * @controller VariableController.catch()
 * @path GET /variable/catch
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function $catch(
    connection: IConnection,
): Promise<void> {
    return Fetcher.fetch(
        connection,
        $catch.ENCRYPTED,
        $catch.METHOD,
        $catch.path(),
    );
}
export namespace $catch {

    export const METHOD = "GET" as const;
    export const PATH: string = "/variable/catch";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export const path = (): string => {
        return `/variable/catch`;
    }
}