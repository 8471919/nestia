/**
 * @packageDocumentation
 * @module api.functional.bbs.articles.files
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, Resolved, Primitive } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";
import type { Format } from "typia/lib/tags/Format";

import type { IAttachmentFile } from "../../../../structures/IAttachmentFile";

/**
 * @controller BbsFilesController.store
 * @path POST /bbs/:section/articles/:articleId/files
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function store(
  connection: IConnection,
  section: string,
  articleId: string & Format<"uuid">,
  body: store.Input,
): Promise<store.Output> {
  return PlainFetcher.fetch(
    connection,
    {
      ...store.METADATA,
      template: store.METADATA.path,
      path: store.path(section, articleId),
    },
    body,
  );
}
export namespace store {
  export type Input = Resolved<IAttachmentFile.IUpload>;
  export type Output = Primitive<IAttachmentFile>;

  export const METADATA = {
    method: "POST",
    path: "/bbs/:section/articles/:articleId/files",
    request: {
      type: "multipart/form-data",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = (section: string, articleId: string & Format<"uuid">) =>
    `/bbs/${encodeURIComponent(section?.toString() ?? "null")}/articles/${encodeURIComponent(articleId?.toString() ?? "null")}/files`;
}
