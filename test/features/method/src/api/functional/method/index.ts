/**
 * @packageDocumentation
 * @module api.functional.method
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import { Fetcher } from "@nestia/fetcher";
import type { IConnection } from "@nestia/fetcher";

/**
 * @controller MethodController.head()
 * @path HEAD /method/head
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function head(
    connection: IConnection,
): Promise<void> {
    return !!connection.simulate
        ? head.simulate(
              connection,
          )
        : Fetcher.fetch(
              connection,
              head.ENCRYPTED,
              head.METHOD,
              head.path(),
          );
}
export namespace head {

    export const METHOD = "HEAD" as const;
    export const PATH: string = "/method/head";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export const path = (): string => {
        return `/method/head`;
    }
    export const simulate = async (
        _connection: IConnection,
    ): Promise<void> => {
    }
}