/**
 * @packageDocumentation
 * @module api.functional.plain
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import { Fetcher } from "@nestia/fetcher";
import type { IConnection, Primitive } from "@nestia/fetcher";

/**
 * @controller PlainController.send()
 * @path POST /plain
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function send(
    connection: IConnection,
    body: send.Input,
): Promise<send.Output> {
    return Fetcher.fetch(
        {
            ...connection,
            headers: {
                ...(connection.headers ?? {}),
                "Content-Type": "text/plain",
            },
        },
        send.ENCRYPTED,
        send.METHOD,
        send.path(),
        body,
        (str) => str,
    );
}
export namespace send {
    export type Input = Primitive<string>;
    export type Output = Primitive<string>;

    export const METHOD = "POST" as const;
    export const PATH: string = "/plain";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export const path = (): string => {
        return `/plain`;
    }
}