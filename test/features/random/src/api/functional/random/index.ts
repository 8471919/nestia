/**
 * @packageDocumentation
 * @module api.functional.random
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import { Fetcher, Primitive } from "@nestia/fetcher";
import type { IConnection } from "@nestia/fetcher";
import typia from "typia";

import type { IBbsArticle } from "./../../structures/IBbsArticle";

/**
 * @controller RandomController.get()
 * @path GET /random/get
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function get (
        connection: IConnection
    ): Promise<get.Output> {
    return connection.random
        ? typia.random<get.Output>()
        :  Fetcher.fetch(
              connection,
              get.ENCRYPTED,
              get.METHOD,
              get.path()
          );
}
export namespace get {
    export type Output = Primitive<IBbsArticle>;

    export const METHOD = "GET" as const;
    export const PATH: string = "/random/get";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string {
        return `/random/get`;
    }
}

/**
 * @setHeader id
 * 
 * @controller RandomController.header()
 * @path GET /random/header
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function header (
        connection: IConnection
    ): Promise<header.Output> {
    const output: header.Output = connection.random
        ? typia.random<header.Output>()
        : await  Fetcher.fetch(
              connection,
              header.ENCRYPTED,
              header.METHOD,
              header.path()
          );

    // configure header(s)
    connection.headers ??= {};
    connection.headers.id = output.id;

    return output;
}
export namespace header {
    export type Output = Primitive<IBbsArticle>;

    export const METHOD = "GET" as const;
    export const PATH: string = "/random/header";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string {
        return `/random/header`;
    }
}